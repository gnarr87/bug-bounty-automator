#!/bin/bash

# --- Web Scanning Script ---
# This script performs web vulnerability scanning using tools like Nuclei and Nikto.
# It expects TARGET and RESULTS_DIR environment variables to be set.
# It relies on the live_hosts.txt file generated by the recon script.

# --- Configuration ---
# Tools (assumed to be in PATH, enhance later to read from config)
NUCLEI="nuclei"
NIKTO="nikto"

# Nuclei options (consider making configurable)
# Default templates, concurrency 50 (can be overridden in config.yaml via main.py if implemented)
NUCLEI_OPTIONS="-c 50"

# Nikto options (consider making configurable)
NIKTO_OPTIONS="-Tuning 1,2,3,4,5,x" # Default tuning options, add others as needed

# --- Input Validation ---
if [ -z "$TARGET" ]; then
  echo "[ERROR] TARGET environment variable is not set."
  exit 1
fi
if [ -z "$RESULTS_DIR" ]; then
  echo "[ERROR] RESULTS_DIR environment variable is not set."
  exit 1
fi

# --- Setup ---
RECON_DIR="$RESULTS_DIR/recon"
SCANS_DIR="$RESULTS_DIR/scans"
mkdir -p "$SCANS_DIR"

LIVE_HOSTS_FILE="$RECON_DIR/live_hosts.txt"

echo "-----------------------------------------------------"
echo "Starting Web Scans for Target: $TARGET"
echo "Results will be saved in: $SCANS_DIR"
echo "Using live hosts from: $LIVE_HOSTS_FILE"
echo "-----------------------------------------------------"

# Check if live hosts file exists and is not empty
if [ ! -f "$LIVE_HOSTS_FILE" ] || [ ! -s "$LIVE_HOSTS_FILE" ]; then
  echo "[WARN] Live hosts file ($LIVE_HOSTS_FILE) not found or is empty. Skipping web scans."
  exit 0 # Exit gracefully, not an error in the script itself
fi

# --- Tool Execution ---

# 1. Nuclei Scan
echo "[INFO] Running Vulnerability Scanning (Nuclei)..."
NUCLEI_OUTPUT_FILE="$SCANS_DIR/nuclei_results.json"
if command -v $NUCLEI &> /dev/null; then
  $NUCLEI -list "$LIVE_HOSTS_FILE" $NUCLEI_OPTIONS -json -o "$NUCLEI_OUTPUT_FILE" -silent
  # Add -update-templates flag? Maybe run separately or periodically.
  echo "[INFO] Nuclei scan finished. Results: $NUCLEI_OUTPUT_FILE"
else
  echo "[WARN] $NUCLEI command not found. Skipping."
fi

# 2. Nikto Scan
echo "[INFO] Running Web Server Scanning (Nikto)..."
NIKTO_OUTPUT_FILE="$SCANS_DIR/nikto_results.txt"
if command -v $NIKTO &> /dev/null; then
  # Nikto typically scans one host at a time. Loop through live hosts.
  echo "[INFO] Nikto will scan each host individually..."
  while IFS= read -r host || [ -n "$host" ]; do
    echo "[INFO] Running Nikto on: $host"
    # Extract hostname/IP for Nikto's -h flag (remove protocol)
    nikto_target=$(echo "$host" | sed -e 's|^https\?://||' -e 's|/.*$||')
    # Append output to the main file
    $NIKTO -h "$nikto_target" $NIKTO_OPTIONS -output "$SCANS_DIR/nikto_scan_${nikto_target}.tmp" -Format txt >> "$NIKTO_OUTPUT_FILE" 2>&1
    # Optional: Keep individual files or just the combined one
    # mv "$SCANS_DIR/nikto_scan_${nikto_target}.tmp" "$SCANS_DIR/nikto_${nikto_target}.txt"
    rm "$SCANS_DIR/nikto_scan_${nikto_target}.tmp" # Clean up temp file
  done < "$LIVE_HOSTS_FILE"
  echo "[INFO] Nikto scans finished. Combined results: $NIKTO_OUTPUT_FILE"
else
  echo "[WARN] $NIKTO command not found. Skipping."
fi

# Add other scanners here (e.g., sqlmap requires more specific target URLs and setup)

echo "-----------------------------------------------------"
echo "Web Scanning Phase Completed for Target: $TARGET"
echo "-----------------------------------------------------"

exit 0 # Indicate success
